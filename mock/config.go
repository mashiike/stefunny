// Code generated by MockGen. DO NOT EDIT.
// Source: config.go
//
// Generated by this command:
//
//	mockgen -source=config.go -destination=./mock/config.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	cloudwatchlogs "github.com/aws/aws-sdk-go-v2/service/cloudwatchlogs"
	gomock "go.uber.org/mock/gomock"
)

// MockCloudWatchLogsClient is a mock of CloudWatchLogsClient interface.
type MockCloudWatchLogsClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudWatchLogsClientMockRecorder
	isgomock struct{}
}

// MockCloudWatchLogsClientMockRecorder is the mock recorder for MockCloudWatchLogsClient.
type MockCloudWatchLogsClientMockRecorder struct {
	mock *MockCloudWatchLogsClient
}

// NewMockCloudWatchLogsClient creates a new mock instance.
func NewMockCloudWatchLogsClient(ctrl *gomock.Controller) *MockCloudWatchLogsClient {
	mock := &MockCloudWatchLogsClient{ctrl: ctrl}
	mock.recorder = &MockCloudWatchLogsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudWatchLogsClient) EXPECT() *MockCloudWatchLogsClientMockRecorder {
	return m.recorder
}

// DescribeLogGroups mocks base method.
func (m *MockCloudWatchLogsClient) DescribeLogGroups(arg0 context.Context, arg1 *cloudwatchlogs.DescribeLogGroupsInput, arg2 ...func(*cloudwatchlogs.Options)) (*cloudwatchlogs.DescribeLogGroupsOutput, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DescribeLogGroups", varargs...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeLogGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLogGroups indicates an expected call of DescribeLogGroups.
func (mr *MockCloudWatchLogsClientMockRecorder) DescribeLogGroups(arg0, arg1 any, arg2 ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeLogGroups", reflect.TypeOf((*MockCloudWatchLogsClient)(nil).DescribeLogGroups), varargs...)
}
